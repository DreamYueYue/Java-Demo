/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.manulife.eTransfer.api;

import com.manulife.eTransfer.domain.Natinality;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-11-06T16:44:34.407+08:00")

@Api(value = "natinality", description = "the natinality API")
public interface NatinalityApi {

    @ApiOperation(value = "Add a new Natinality", nickname = "addNatinality", notes = "", authorizations = {
        @Authorization(value = "petstore_auth", scopes = {
            @AuthorizationScope(scope = "write:pets", description = "modify natinality in your account"),
            @AuthorizationScope(scope = "read:pets", description = "read your natinality")
            })
    }, tags={ "Natinality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/natinality",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addNatinality(@ApiParam(value = "Pet object that needs to be added to the store", required = true) @Valid @RequestBody Natinality body);


    @ApiOperation(value = "Deletes a Natinality", nickname = "deleteNatinality", notes = "", authorizations = {
        @Authorization(value = "petstore_auth", scopes = {
            @AuthorizationScope(scope = "write:pets", description = "modify natinality in your account"),
            @AuthorizationScope(scope = "read:pets", description = "read your natinality")
            })
    }, tags={ "Natinality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "natinality not found") })
    @RequestMapping(value = "/natinality/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteNatinality(@ApiParam(value = "natinality id to delete", required = true) @PathVariable("id") Long id);


    @ApiOperation(value = "Find pet by ID", nickname = "getNatinalityById", notes = "Returns a single pet", response = Natinality.class, tags={ "Natinality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Natinality.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Natinality not found") })
    @RequestMapping(value = "/natinality/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Natinality> getNatinalityById(@ApiParam(value = "ID of pet to return", required = true) @PathVariable("id") Long id);


    @ApiOperation(value = "Update an existing pet", nickname = "updateNatinality", notes = "", authorizations = {
        @Authorization(value = "petstore_auth", scopes = {
            @AuthorizationScope(scope = "write:pets", description = "modify natinality in your account"),
            @AuthorizationScope(scope = "read:pets", description = "read your natinality")
            })
    }, tags={ "Natinality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Natinality not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/natinality",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateNatinality(@ApiParam(value = "Natinality object that needs to be added to the store", required = true) @Valid @RequestBody Natinality body);

}
